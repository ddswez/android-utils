
//前段页面
public void backUpSms(View view) {
		
		pdProgress = new ProgressDialog(this);
		pdProgress.setMessage("正在备份短信.....");
		pdProgress.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
		pdProgress.show();
		new Thread() {
			public void run() {
				File file = new File(Environment.getExternalStorageDirectory()
						.getAbsolutePath()+"/sms_lu.xml");
				
				SmsUtils.smsBackup(getApplicationContext(), file,new SmsCallback() {
					
					@Override
					public void preSmsBackup(int total) {
						// TODO Auto-generated method stub
						pdProgress.setMax(total);
					}
					
					@Override
					public void onSmsBackup(int progress) {
						// TODO Auto-generated method stub
						pdProgress.setProgress(progress);
					}
				});
				
				pdProgress.dismiss();
			};

		}.start();

	}


工具类:底层逻辑

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.xmlpull.v1.XmlSerializer;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.util.Xml;

/**
 * 短信备份的工具类
 * @author Administrator
 *
 */
public class SmsUtils {

	public static void smsBackup(Context ctx,File file ,SmsCallback callback){
		
		Cursor cursor = ctx.getContentResolver().query(Uri.parse("content://sms"),
				new String[]{ "address", "date", "type", "body" },
				null, null, null);
		
		callback.preSmsBackup(cursor.getCount());
		
		XmlSerializer xml = Xml.newSerializer();
		try {
			//设置输出的文件和输出的类型
			xml.setOutput(new FileOutputStream(file), "utf-8");
			//设置xml文件标头信息  参1:编码  参2:是否依赖第三方文件
			xml.startDocument("utf-8", true);
			
			xml.startTag(null, "smss");
			int progress = 0;
			while(cursor.moveToNext()){
				xml.startTag(null, "sms");
				
				xml.startTag(null, "address");
				String address = cursor.getString(cursor.getColumnIndex("address"));
				xml.text(address);
				xml.endTag(null, "address");
				
				xml.startTag(null, "date");
				String date = cursor.getString(cursor.getColumnIndex("date"));
				xml.text(date);
				xml.endTag(null, "date");
				
				xml.startTag(null, "type");
				String type = cursor.getString(cursor.getColumnIndex("type"));
				xml.text(type);
				xml.endTag(null, "type");
				
				xml.startTag(null, "body");
				String body = cursor.getString(cursor.getColumnIndex("body"));
				xml.text(body);
				xml.endTag(null, "body");
				
				xml.endTag(null, "sms");
				
				progress++;
				callback.onSmsBackup(progress);
				
				Thread.sleep(500);
			}
			
			xml.endTag(null, "smss");
			xml.endDocument();
			cursor.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	public interface SmsCallback{
		
		public void preSmsBackup(int total);
		
		public void onSmsBackup(int progress);
	}
}


